---
- hosts:
    - 127.0.0.1
  gather_facts: true
  become: true
  vars:
    kernel:
      min: "6.6"
      full: "6.6.20+rpt-rpi-v8"
      full_pi5: "6.6.20+rpt-rpi-2712"
    pwnagotchi:
      hostname: "{{ lookup('env', 'PWN_HOSTNAME') | default('pwnagotchi', true) }}"
      version: "{{ lookup('env', 'PWN_VERSION') | default('main', true) }}"
    system:
      boot_options:
        - "dtoverlay=dwc2"
        - "dtoverlay=spi1-3cs"
        - "dtparam=spi=on"
        - "dtparam=i2c_arm=on"
        - "dtparam=i2c1=on"
        - "gpu_mem=16"
      modules:
        - "i2c-dev"
    services:
      enable:
        - bettercap.service
        - epd-fuse.service
        - fstrim.timer
        - pwnagotchi.service
        - pwngrid-peer.service
      disable:
        - apt-daily-upgrade.service
        - apt-daily-upgrade.timer
        - apt-daily.service
        - apt-daily.timer
        - wpa_supplicant.service
        - bluetooth.service
        - triggerhappy.service
        - ifup@wlan0.service
        - dnsmasq.service
    packages:
      bettercap:
        url: "https://github.com/bettercap/bettercap/releases/download/v2.31.1/bettercap_linux_armhf_v2.31.1.zip"
        ui: "https://github.com/bettercap/ui/releases/download/v1.3.0/ui.zip"
      pwngrid:
        url: "https://github.com/evilsocket/pwngrid/releases/download/v1.10.3/pwngrid_linux_armhf_v1.10.3.zip"
      apt:
        hold:
          - firmware-atheros
          - firmware-brcm80211
          - firmware-libertas
          - firmware-misc-nonfree
          - firmware-realtek
        remove:
          - raspberrypi-net-mods
          - dhpys-swapfile
          - dhcpcd5
          - triggerhappy
          - nfs-common
          - wpa_supplicant
        install:
          - autoconf
          - bc
          - bison
          - build-essential
          - cryptsetup
          - dnsmasq
          - dphys-swapfile
          - fbi
          - firmware-atheros
          - firmware-brcm80211
          - firmware-libertas
          - firmware-misc-nonfree
          - firmware-realtek
          - flex
          - fonts-dejavu
          - fonts-dejavu-core
          - fonts-dejavu-extra
          - fonts-freefont-ttf
          - fonts-ipaexfont-gothic
          - gawk
          - gcc-arm-none-eabi
          - git
          - golang
          - kalipi-bootloader
          - kalipi-kernel
          - kalipi-re4son-firmware
          - libatlas-base-dev
          - libavcodec59
          - libavformat59
          - libbluetooth-dev
          - libbz2-dev
          - libc6-dev
          - libc6-armhf-cross
          - libcap-dev
          - libcurl-ocaml-dev
          - libfuse-dev
          - libgstreamer1.0-0
          - libimath-dev
          - libjasper-dev
          - libncursesw5-dev
          - libnetfilter-queue-dev
          - libopenexr-dev
          - libopenjp2-7
          - libopenmpi-dev
          - libopenmpi3
          - libpcap-dev
          - libraspberrypi-bin
          - libraspberrypi-dev
          - libraspberrypi-doc
          - libraspberrypi0
          - libsqlite3-dev
          - libssl-dev
          - libssl-ocaml-dev
          - libswscale5
          - libtiff6
          - libtool
          - libusb-1.0-0-dev
          - lsof
          - make
          - ntp
          - python3-dbus
          - python3-flask
          - python3-flask-cors
          - python3-flaskext.wtf
          - python3-gast
          - python3-mpi4py
          - python3-pil
          - python3-pip
          - python3-pycryptodome
          - python3-requests
          - python3-scapy
          - python3-setuptools
          - python3-smbus
          - python3-smbus2
          - python3-spidev
          - python3-tweepy
          - python3-werkzeug
          - python3-yaml
          - raspberrypi-kernel-headers
          - rsync
          - screen
          - tcpdump
          - unzip
          - usrmerge
          - vim
          - wget
  environment:
    ARCHFLAGS: "-arch aarch64"

  tasks:
    ###########################################
    # Update repositories and install packages
    ###########################################
    - name: Add re4son-kernel repo key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 11764EE8AC24832F
        state: present

    - name: Add re4son-kernel repository
      apt_repository:
        repo: deb http://http.re4son-kernel.com/re4son/ kali-pi main
        state: present

    - name: create /etc/apt/preferences.d/kali.pref
      copy:
        dest: /etc/apt/preferences.d/kali.pref
        force: yes
        content: |
          # ensure kali packages that are installed take precedence
          Package: *
          Pin: release n=kali-pi
          Pin-Priority: 999

    - name: add firmware packages to hold
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items: "{{ packages.apt.hold }}"

    - name: Add jammy repo key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 871920D1991BC93C
        state: present

    - name: Add jammy archive repository
      apt_repository:
        repo: deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu/ jammy main universe
        state: present

    - name: Add xenial repo key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 3B4FE6ACC0B21F32
        state: present

    - name: Add xenial arm64 ports repository
      apt_repository:
        repo: deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports xenial main universe
        state: present

    - name: update apt package cache
      apt:
        update_cache: yes

    - name: upgrade apt distro
      apt:
        upgrade: full

    - name: install usrmerge dependency
      apt:
        deb: https://snapshot.debian.org/archive/debian/20160413T160058Z/pool/main/libp/libpng/libpng12-0_1.2.54-6_arm64.deb

    - name: update apt package cache
      apt:
        update_cache: yes

    - name: upgrade apt distro
      apt:
        upgrade: full

    - name: install packages
      apt:
        name: "{{ packages.apt.install }}"
        state: present
        update_cache: yes
        install_recommends: false

    ###########################################
    # Set up host
    ###########################################
    - name: Install go-1.21
      unarchive:
        src: https://go.dev/dl/go1.21.5.linux-arm64.tar.gz
        dest: /usr/local
        remote_src: yes
      register: golang

    - name: Update .bashrc for go-1.21
      blockinfile:
        dest: /etc/profile
        state: present
        block: |
          export GOPATH=$HOME/go
          export PATH=/usr/local/go/bin:$PATH:$GOPATH/bin
      when: golang.changed

    - name: remove current rc.local
      file:
        path: /etc/rc.local
        state: absent

    - name: adjust /boot/config.txt
      lineinfile:
        dest: /boot/config.txt
        insertafter: EOF
        line: '{{ item }}'
      with_items: "{{system.boot_options}}"

    - name: adjust /etc/modules
      lineinfile:
        dest: /etc/modules
        insertafter: EOF
        line: '{{ item }}'
      with_items: "{{system.modules}}"

    - name: change hostname
      lineinfile:
        dest: /etc/hostname
        regexp: '^raspberrypi'
        line: "{{pwnagotchi.hostname}}"
        state: present
      when: lookup('file', '/etc/hostname') == "raspberrypi"
      register: hostname

    - name: add hostname to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.1\.1[ \t]+raspberrypi'
        line: "127.0.1.1\t{{pwnagotchi.hostname}}"
        state: present
      when: hostname.changed

    # Now we disable sap and a2dp, we don't use them on rpi
    - name: disable sap plugin for bluetooth.service
      lineinfile:
        dest: /lib/systemd/system/bluetooth.service
        regexp: '^ExecStart=/usr/libexec/bluetooth/bluetoothd$'
        line: 'ExecStart=/usr/libexec/bluetooth/bluetoothd --noplugin=sap,a2dp'
        state: present

    ###########################################
    # libpcap - build from source
    ###########################################
    # install libpcap before bettercap and pwngrid, so they use it
    - name: clone libpcap v1.9 from github
      git:
        repo: 'https://github.com/the-tcpdump-group/libpcap.git'
        dest: /usr/local/src/libpcap
        version: libpcap-1.9
        depth: 1

    - name: build and install libpcap into /usr/local/lib
      shell: "./configure && make && make install"
      args:
        executable: /bin/bash
        chdir: /usr/local/src/libpcap

    - name: remove libpcap build folder
      file:
        state: absent
        path: /usr/local/src/libpcap

    - name: create symlink /usr/local/lib/libpcap.so.1.9.1
      file:
        src: /usr/local/lib/libpcap.so.1.9.1
        dest: /usr/local/lib/libpcap.so.0.8
        state: link

    ###########################################
    # BUILD nexmon DRIVER
    ###########################################
    # - name: disable git compression for nexmon
    #   command: "git config --global core.compression 0"

    # - name: clone nexmon repository
    #   git:
    #     repo: https://github.com/seemoo-lab/nexmon.git
    #     dest: /usr/local/src/nexmon
    #     version: master
    #     depth: 1

    # - name: reenable git compression
    #   command: "git config --global core.compression -1"

    # # warning: this statement may fall through [-Wimplicit-fallthrough=]
    # - name: make firmware, RPi4
    #   shell: "source ./setup_env.sh && make"
    #   args:
    #     executable: /bin/bash
    #     chdir: /usr/local/src/nexmon/
    #   environment:
    #     QEMU_UNAME: "{{ kernel.full }}"
    #     ARCHFLAGS: "-arch aarch64"

    # - name: install new firmware (bcm43455c0), RPi4 RPi5
    #   copy:
    #     src: /usr/local/src/nexmon/patches/bcm43455c0/7_45_206/nexmon/brcmfmac43455-sdio.bin
    #     dest: /usr/lib/firmware/brcm/brcmfmac43455-sdio.bin
    #     follow: true

    # - name: make firmware patch (bcm43436b0)
    #   shell: "source ./setup_env.sh && cd /usr/local/src/nexmon/patches/bcm43436b0/9_88_4_65/nexmon/ && make"
    #   args:
    #     executable: /bin/bash
    #     chdir: /usr/local/src/nexmon/
    #   environment:
    #     QEMU_UNAME: "{{ kernel.full }}"
    #     ARCHFLAGS: "-arch aarch64"

    # - name: install new firmware (bcm43436b0)
    #   copy:
    #     src: /usr/local/src/nexmon/patches/bcm43436b0/9_88_4_65/nexmon/brcmfmac43436-sdio.bin
    #     dest: /usr/lib/firmware/brcm/brcmfmac43436-sdio.bin
    #     follow: true

    # - name: make firmware patch (bcm43430a1)
    #   shell: "source ./setup_env.sh && cd /usr/local/src/nexmon/patches/bcm43430a1/7_45_41_46/nexmon/ && make"
    #   args:
    #     executable: /bin/bash
    #     chdir: /usr/local/src/nexmon/
    #   environment:
    #     QEMU_UNAME: "{{ kernel.full }}"
    #     ARCHFLAGS: "-arch aarch64"

    # - name: copy modified driver, RPi4
    #   copy:
    #     src: "/usr/local/src/nexmon/patches/driver/brcmfmac_{{ kernel.min }}.y-nexmon/brcmfmac.ko"
    #     dest: "/usr/lib/modules/{{ kernel.full }}/kernel/drivers/net/wireless/broadcom/brcm80211/brcmfmac/brcmfmac.ko"
    #   environment:
    #     QEMU_UNAME: "{{ kernel.full }}"
    #     ARCHFLAGS: "-arch aarch64"

    # - name: install new firmware (bcm43430a1)
    #   copy:
    #     src: /usr/local/src/nexmon/patches/bcm43430a1/7_45_41_46/nexmon/brcmfmac43430-sdio.bin
    #     dest: /usr/lib/firmware/brcm/brcmfmac43430-sdio.bin
    #     follow: true

    # - name: copy 43430-sdio as 43436s-sdio for the special 43430/1 /2
    #   copy:
    #     src: /usr/lib/firmware/brcm/brcmfmac43430-sdio.bin
    #     dest: /usr/lib/firmware/brcm/brcmfmac43436s-sdio.bin
    #     follow: true

    # # delete blob files that make nexmon sad
    # - name: Delete the firmware blob files to avoid some nexmon crashing
    #   file:
    #     state: absent
    #     path: '{{ item }}'
    #   loop:
    #     - /usr/lib/firmware/brcm/brcmfmac43430-sdio.clm_blob
    #     - /usr/lib/firmware/brcm/brcmfmac43430-sdio.raspberrypi,model-zero-w.clm_blob
    #     - /usr/lib/firmware/brcm/brcmfmac43430-sdio.raspberrypi,3-model-b.clm_blob
    #     - /usr/lib/firmware/brcm/brcmfmac43430b0-sdio.raspberrypi,model-zero-2-w.clm_blob
    #     - /usr/lib/firmware/brcm/brcmfmac43436-sdio.clm_blob
    #     - /usr/lib/firmware/brcm/brcmfmac43436-sdio.raspberrypi,model-zero-2-w.clm_blob
    #     - /usr/lib/firmware/brcm/brcmfmac43455-sdio.clm_blob

    # - name: backup original driver
    #   command: "mv /usr/lib/modules/{{ kernel.full }}/kernel/drivers/net/wireless/broadcom/brcm80211/brcmfmac/brcmfmac.ko.xz /usr/lib/modules/{{ kernel.full }}/kernel/drivers/net/wireless/broadcom/brcm80211/brcmfmac/brcmfmac.ko.xz.orig"

    # - name: load brcmfmac drivers
    #   command: "/sbin/depmod {{ kernel.full }}"
    #   environment:
    #     QEMU_UNAME: "{{ kernel.full }}"

    # # To shrink the final image, remove the nexmon directory (takes 2.5G of space) post build and installation
    # - name: Delete nexmon content & directory
    #   file:
    #     state: absent
    #     path: /usr/local/src/nexmon/

    - name: Create custom plugin directory
      file:
        path: /usr/local/share/pwnagotchi/custom-plugins/
        state: directory

    - name: configure dphys-swapfile
      lineinfile:
        dest: /etc/dphys-swapfile
        state: absent
        insertafter: EOF
        line: "CONF_SWAPSIZE=4096"

    ###########################################
    # Clone external repositories
    ###########################################
    - name: clone papirus repository
      git:
        repo: https://github.com/repaper/gratis.git
        dest: /usr/local/src/gratis
        depth: 1
      register: gratisgit

    - name: build papirus service
      make:
        chdir: /usr/local/src/gratis
        target: rpi
        params:
          EPD_IO: epd_io_free_uart.h
          PANEL_VERSION: 'V231_G2'
      when: gratisgit.changed

    - name: install papirus service
      make:
        chdir: /usr/local/src/gratis
        target: rpi-install
        params:
          EPD_IO: epd_io_free_uart.h
          PANEL_VERSION: 'V231_G2'
      when: gratisgit.changed

    - name: configure papirus display size
      lineinfile:
        dest: /etc/default/epd-fuse
        regexp: "#EPD_SIZE=2.0"
        line: "EPD_SIZE=2.0"

    - name: collect python pip package list
      command: "pip3 list"
      register: pip_output

    - name: set python pip package facts
      set_fact:
        pip_packages: >
          {{ pip_packages | default({}) | combine( { item.split()[0]: item.split()[1] } ) }}
      with_items: "{{ pip_output.stdout_lines }}"

    - name: acquire python3 pip target
      command: "python -c 'import sys;print(sys.path.pop())'"
      register: pip_target

    - name: Create custom config directory
      file:
        path: /etc/pwnagotchi/conf.d/
        state: directory

    ###########################################
    # Set up pwnagotchi
    ###########################################
    - name: create /usr/local/src/pwnagotchi/ folder
      file:
        path: /usr/local/src/pwnagotchi/
        state: directory

    - name: clone pwnagotchi repository
      git:
        repo: https://github.com/emonkey/pwnagotchi.git
        dest: /usr/local/src/pwnagotchi
        version: update-python-libs
        single_branch: yes
        depth: 1
      register: pwnagotchigit

    # - name: replace pwnagotchi requirements
    #   copy:
    #     dest: /usr/local/src/pwnagotchi/requirements.txt
    #     content: |
    #       file-read-backwards==3.0.0
    #       flask-cors==4.0.0
    #       flask-wtf==1.2.1
    #       flask==3.0.2
    #       gast==0.5.4
    #       inky[rpi]==1.5.0
    #       matplotlib==3.8.3
    #       numpy==1.26.4
    #       Pillow==10.2.0
    #       pycryptodome==3.20.0
    #       python-dateutil==2.9.0
    #       PyYAML==6.0.1
    #       requests==2.31.0
    #       scapy==2.5.0
    #       scipy==1.12.0
    #       smbus2==0.4.3
    #       spidev==3.6
    #       stable-baselines3==2.3.0
    #       tensorflow-estimator==2.15.0
    #       tensorflow==2.16.1
    #       toml==0.10.2
    #       tweepy==4.14.0
    #       websockets==12.0
    #   when: (pwnagotchigit.changed) or (pip_packages['pwnagotchi'] is undefined) or (pip_packages['pwnagotchi'] != pwnagotchi_version)

    - name: build pwnagotchi wheel
      command: "pip3 install . --no-cache-dir --break-system-packages"
      args:
        chdir: /usr/local/src/pwnagotchi

    - name: create /usr/local/share/pwnagotchi/ folder
      file:
        path: /usr/local/share/pwnagotchi/
        state: directory

    - name: clone pwnagotchi plugins repository
      git:
        repo: https://github.com/evilsocket/pwnagotchi-plugins-contrib.git
        dest: /usr/local/share/pwnagotchi/availaible-plugins
        depth: 1

    - name: fetch pwnagotchi version
      set_fact:
        pwnagotchi_version: "{{ lookup('file', '/usr/local/src/pwnagotchi/pwnagotchi/_version.py') | regex_replace('.*__version__.*=.*''([0-9]+\\.[0-9]+\\.[0-9]+[A-Za-z0-9]*)''.*', '\\1') }}"

    - name: pwnagotchi version found
      debug:
        msg: "{{ pwnagotchi_version }}"

    - name: build pwnagotchi wheel
      command: "python setup.py sdist bdist_wheel"
      args:
        chdir: /usr/local/src/pwnagotchi
      when: (pwnagotchigit.changed) or (pip_packages['pwnagotchi'] is undefined) or (pip_packages['pwnagotchi'] != pwnagotchi_version)

    - name: install opencv-python
      pip:
        name: opencv-python
        extra_args: "--no-deps --no-cache-dir --only-binary=:all: --target={{ pip_target.stdout }}"
      when: (pip_packages['opencv-python'] is undefined) or (pip_packages['opencv-python'] != '4.7.0.72')

    - name: install tensorflow
      pip:
        name: tensorflow-aarch64
        extra_args: "--no-deps --no-cache-dir --only-binary=:all: --target={{ pip_target.stdout }}"
      when: (pip_packages['tensorflow'] is undefined)

    - name: install pwnagotchi wheel and dependencies
      pip:
        name: "{{ lookup('fileglob', '/usr/local/src/pwnagotchi/dist/pwnagotchi*.whl') }}"
        extra_args: "--no-cache-dir --break-system-packages"
      when: (pwnagotchigit.changed) or (pip_packages['pwnagotchi'] is undefined) or (pip_packages['pwnagotchi'] != pwnagotchi_version)

    ###########################################
    # Set up plugins and extras
    ###########################################
    - name: download and install pwngrid
      unarchive:
        src: "{{ packages.pwngrid.url }}"
        dest: /usr/bin
        remote_src: yes
        mode: 0755

    - name: download and install bettercap
      unarchive:
        src: "{{ packages.bettercap.url }}"
        dest: /usr/bin
        remote_src: yes
        exclude:
          - README.md
          - LICENSE.md
        mode: 0755

    - name: clone bettercap caplets
      git:
        repo: https://github.com/bettercap/caplets.git
        dest: /tmp/caplets
        depth: 1
      register: capletsgit

    - name: install bettercap caplets
      make:
        chdir: /tmp/caplets
        target: install
      when: capletsgit.changed

    - name: download and install bettercap ui
      unarchive:
        src: "{{ packages.bettercap.ui }}"
        dest: /usr/local/share/bettercap/
        remote_src: yes
        mode: 0755

    - name: add HDMI powersave to rc.local
      blockinfile:
        path: /etc/rc.local
        insertbefore: "exit 0"
        block: |
          if ! /opt/vc/bin/tvservice -s | egrep 'HDMI|DVI'; then
            /opt/vc/bin/tvservice -o
          fi

    - name: create /etc/pwnagotchi folder
      file:
        path: /etc/pwnagotchi
        state: directory

    - name: check if user configuration exists
      stat:
        path: /etc/pwnagotchi/config.toml
      register: user_config

    - name: create /etc/pwnagotchi/config.toml
      copy:
        dest: /etc/pwnagotchi/config.toml
        content: |
          # Add your configuration overrides on this file any configuration changes done to default.toml will be lost!
          # Example:
          # ui.display.enabled = true
          # ui.display.type = "waveshare_2"
      when: not user_config.stat.exists

    - name: configure motd
      copy:
        dest: /etc/motd
        content: |
          (◕‿‿◕) {{pwnagotchi.hostname}}

          Hi! I'm a pwnagotchi, please take good care of me!
          Here are some basic things you need to know to raise me properly!

          If you want to change my configuration, use /etc/pwnagotchi/config.toml

          All the configuration options can be found on /etc/pwnagotchi/default.toml,
          but don't change this file because I will recreate it every time I'm restarted!

          I'm managed by systemd. Here are some basic commands.

          If you want to know what I'm doing, you can check my logs with the command
          tail -f /var/log/pwnagotchi.log

          If you want to know if I'm running, you can use
          systemctl status pwnagotchi

          You can restart me using
          systemctl restart pwnagotchi

          But be aware I will go into MANUAL mode when restarted!
          You can put me back into AUTO mode using
          touch /root/.pwnagotchi-auto && systemctl restart pwnagotchi

          You learn more about me at https://pwnagotchi.ai/
      when: hostname.changed

    ###########################################
    # Cleanup
    ###########################################
    # Ansible's apt module has an "autoclean" option but it only removes packages
    # that can no longer be downloaded.  Ansible v2.13 added the "clean" option
    # which actually purges the apt cache, but that's newer than what we can
    # install from the RasPiOS repos.  Instead, we'll manually clean the cache.
    - name: clean apt cache
      command: "apt-get clean"
      args:
        warn: false

    - name: remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: disable unnecessary services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      with_items: "{{ services.disable }}"

    - name: enable services
      systemd:
        name: "{{ item }}"
        enabled: true
        state: stopped
      with_items: "{{ services.enable }}"
      register: enabled

    - name: fix permissions on /home/pi
      file:
        path: /home/pi
        owner: pi
        group: pi
        recurse: true

    - name: remove pre-collected packages zip
      file:
        path: /root/go_pkgs.tgz
        state: absent

    - name: remove /root/go folder
      file:
        state: absent
        path: /root/go

    - name: remove /usr/local/go folder
      file:
        state: absent
        path: /usr/local/go

    - name: remove pip cache
      file:
        state: absent
        path: /root/.cache/pip

    - name: remove ssh keys
      file:
        state: absent
        path: "{{ item }}"
      with_fileglob:
        - "/etc/ssh/ssh_host*_key*"

    - name: regenerate ssh keys
      shell: "dpkg-reconfigure openssh-server"
      args:
        executable: /bin/bash

    # Now we remove packages
    - name: remove unnecessary apt packages
      apt:
        name: "{{ packages.apt.remove }}"
        state: absent
        purge: yes
      register: removed

    - name: remove dependencies that are no longer required
      apt:
        autoremove: yes
      when: removed.changed

    - name: clean apt cache
      apt:
        autoclean: true
      when: removed.changed

  handlers:
  - name: reload systemd services
    systemd:
      daemon_reload: yes
    when: enabled.changed
